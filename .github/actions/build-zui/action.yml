name: Build Zui
description: Build Zui for the current platform
inputs:
  cmd:
    required: false
    default: yarn electron-builder
  gh_token:
    required: true

  # Windows Inputs
  ssl_com_username:
    required: true
  ssl_com_password:
    required: true
  ssl_com_totp_secret:
    required: true
  ssl_com_credential_id:
    required: true

  # Mac Inputs
  apple_id:
    required: true
  apple_id_password:
    required: true
  apple_team_id:
    required: true
  cert_p12:
    required: true
  cert_passphrase:
    required: true

runs:
  using: 'composite'
  steps:
    - name: Install rpm
      if: runner.os == 'Linux'
      run: sudo apt-get install -y rpm
      shell: bash

    - name: Set developer ID certificate in keychain
      if: runner.os == 'macOS'
      run: |
        security create-keychain -p password build
        security default-keychain -s build
        security unlock-keychain -p password build
        f=$(mktemp)
        echo ${{ inputs.cert_p12 }} | base64 -d > $f
        security import $f -k build -A -T /usr/bin/codesign -T /usr/bin/security -f pkcs12  -P ${{ inputs.cert_passphrase }}
        rm $f
        security set-key-partition-list -S apple-tool:,apple: -k password build
        security find-identity -p codesigning -v
      shell: bash

    - name: Checkout esigner-codesign repository
      if: runner.os == 'Windows'
      uses: actions/checkout@v3
      with:
       repository: 'SSLcom/esigner-codesign'
       path: esigner-codesign

    - name: Make values from package.json available in Actions steps
      id: zui-package
      uses: RadovanPelka/github-action-json@v1.0.1
      with:
        path: apps/zui/package.json

    - name: Build & Publish
      run: ${{ inputs.cmd }}
      shell: bash
      env:
        GH_TOKEN: ${{ inputs.gh_token }}
        APPLE_ID: ${{ inputs.apple_id }}
        APPLE_ID_PASSWORD: ${{ inputs.apple_id_password }}
        APPLE_TEAM_ID: ${{ inputs.apple_team_id }}
        CODE_SIGN_SCRIPT_PATH: ${{ github.workspace }}/esigner-codesign/dist/index.js
        INPUT_COMMAND: sign
        INPUT_FILE_PATH: ${{ github.workspace }}/dist/apps/zui/${{ fromJSON(steps.zui-package.outputs.productName) }} Setup ${{ fromJSON(steps.zui-package.outputs.version) }}.exe
        INPUT_OVERRIDE: true
        INPUT_MALWARE_BLOCK: false
        INPUT_CLEAN_LOGS: false
        INPUT_JVM_MAX_MEMORY: 1024M
        INPUT_ENVIRONMENT_NAME: PROD
        INPUT_USERNAME: ${{ inputs.ssl_com_username }}
        INPUT_PASSWORD: ${{ inputs.ssl_com_password }}
        INPUT_TOTP_SECRET: ${{ inputs.ssl_com_totp_secret }}
        INPUT_CREDENTIAL_ID: ${{ inputs.ssl_com_credential_id }}

    - name: Check for successful signing with SignTool
      if: runner.os == 'Windows'
      run: |
        "C:\Program Files (x86)\Microsoft SDKs\ClickOnce\SignTool\signtool.exe" verify /pa "${{ github.workspace }}/dist/apps/zui/${{ fromJSON(steps.zui-package.outputs.productName) }} Setup ${{ fromJSON(steps.zui-package.outputs.version) }}.exe"
      shell: cmd

    - name: Check notorization with gatekeeper
      if: runner.os == 'macOS'
      run: |
        spctl --assess --type execute --verbose --ignore-cache --no-cache dist/apps/zui/mac/*.app
      shell: bash
